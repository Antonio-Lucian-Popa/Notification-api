server:
  port: ${NOTIFICATION_SERVICE_PORT:8082} # Portul pe care va rula microserviciul

spring:
  application:
    name: notification-api # Numele microserviciului
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    exchange: ${RABBITMQ_EXCHANGE:notificationExchange}
    routingkey: ${RABBITMQ_ROUTING_KEY:notificationKey}
    queue: ${RABBITMQ_QUEUE:notificationQueue}
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:drinkwithme}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE:http://localhost:8761/eureka/}
    fetch-registry: true
    register-with-eureka: true

management:
  endpoints:
    web:
      exposure:
        include: health,info
  health:
    rabbit:
      enabled: true # Activeaz? monitorizarea s?n?t??ii pentru RabbitMQ
